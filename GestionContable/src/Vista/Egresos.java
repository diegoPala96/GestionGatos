/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.con_Egresos;
import Controlador.con_categoria;
import Controlador.fecha;
import Modelo.Categoria;
import Modelo.Egreso;
import java.awt.HeadlessException;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanix
 */
public class Egresos extends javax.swing.JInternalFrame {

    private con_categoria conCat = new con_categoria();
    private con_Egresos conEgr = new con_Egresos();

    /**
     * Creates new form Egresos
     */
    public Egresos() {
        initComponents();
        this.llenarConboCate();
        this.listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRegistrar = new javax.swing.JPanel();
        lblDetalle = new javax.swing.JLabel();
        lblMonto = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        txtDetalle = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();
        chkNuevo = new javax.swing.JCheckBox();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblCategoria = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox<>();
        datFecha = new com.toedter.calendar.JDateChooser();
        pnlListar = new javax.swing.JPanel();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Egresos");

        pnlRegistrar.setBorder(javax.swing.BorderFactory.createTitledBorder("Registrar Egresos"));

        lblDetalle.setText("Detalle:");

        lblMonto.setText("Monto:");

        lblFecha.setText("Fecha:");

        chkNuevo.setText("Nuevo");
        chkNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblCategoria.setText("Categoria:");

        javax.swing.GroupLayout pnlRegistrarLayout = new javax.swing.GroupLayout(pnlRegistrar);
        pnlRegistrar.setLayout(pnlRegistrarLayout);
        pnlRegistrarLayout.setHorizontalGroup(
            pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrarLayout.createSequentialGroup()
                        .addComponent(chkNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar))
                    .addGroup(pnlRegistrarLayout.createSequentialGroup()
                        .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDetalle)
                            .addComponent(lblMonto)
                            .addComponent(lblFecha))
                        .addGap(39, 39, 39)
                        .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMonto, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDetalle)
                            .addComponent(datFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlRegistrarLayout.createSequentialGroup()
                        .addComponent(lblCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlRegistrarLayout.setVerticalGroup(
            pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDetalle)
                    .addComponent(txtDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMonto)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFecha)
                    .addComponent(datFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlListar.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de Ingresos"));

        lblBuscar.setText("Buscar:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Detalle", "Monto", "Fecha", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListar);

        lblTotal.setText("Total Egresos");

        txtTotal.setEditable(false);
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtTotal.setText("0");

        javax.swing.GroupLayout pnlListarLayout = new javax.swing.GroupLayout(pnlListar);
        pnlListar.setLayout(pnlListarLayout);
        pnlListarLayout.setHorizontalGroup(
            pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListarLayout.createSequentialGroup()
                        .addComponent(lblBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar))
                    .addGroup(pnlListarLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlListarLayout.setVerticalGroup(
            pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar)
                    .addGroup(pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuscar)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.lirmpiarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void chkNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNuevoActionPerformed
        // TODO add your handling code here:
        if (chkNuevo.isSelected()) {
            btnCancelar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else {
            btnCancelar.setEnabled(false);
            btnGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_chkNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        Egreso egreso = new Egreso();
        if (txtDetalle.getText().length() == 0 || txtMonto.getText().length() == 0 || datFecha.getDate() == null || cmbCategoria.getSelectedItem().equals("Seleccionar")) {
            JOptionPane.showMessageDialog(this, "Verifique que todos los campos esten llenos", "Verificar Campos", JOptionPane.WARNING_MESSAGE);
        } else {
            if (validarMonto(txtMonto.getText())) {
                if (JOptionPane.showConfirmDialog(this, "Esta Seguro que desea agregar el nuevo egreso?", "Confirmar Egreso", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                    System.out.println("Agregado");
                    egreso.setDetalle(txtDetalle.getText());
                    egreso.setMonto(Double.parseDouble(txtMonto.getText()));

                    Calendar cal;
                    int d, m, a;
                    cal = datFecha.getCalendar();

                    d = cal.get(Calendar.DAY_OF_MONTH);
                    m = cal.get(Calendar.MONTH);
                    a = cal.get(Calendar.YEAR) - 1900;

                    egreso.setFecha(new Date(a, m, d));
                    egreso.setCategoria(conCat.selectId(cmbCategoria.getSelectedItem().toString()));

                    if (conEgr.Insert(egreso)) {
                        JOptionPane.showMessageDialog(this, "Se a agregado Correctamente", "Agregado", JOptionPane.INFORMATION_MESSAGE);
                        this.listar();
                        this.lirmpiarCampos();
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Se ha cancelado la agregacion", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Verifique que el monto este bien ingresado", "Verificar Monto", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListarMouseClicked
        // TODO add your handling code here:
        int filaseleccionada;
        try {
            //Guardamos en un entero la fila seleccionada.
            filaseleccionada = tblListar.getSelectedRow();
            if (filaseleccionada == -1) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila.");
                btnEliminar.setEnabled(false);
            } else {
                btnEliminar.setEnabled(true);
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex + "\nInténtelo nuevamente", " .::Error En la Operacion::.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblListarMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaseleccionada = tblListar.getSelectedRow();

        Egreso egreso = new Egreso();
        egreso.setDetalle((String) tblListar.getValueAt(filaseleccionada, 0));
        egreso.setCategoria(conCat.selectId((String) tblListar.getValueAt(filaseleccionada, 3)));

        if (JOptionPane.showConfirmDialog(this, "Esta Seguro que desea eliminar la Categoria?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            if (conEgr.delete(egreso)) {
                JOptionPane.showMessageDialog(this, "Se a eliminado Correctamente", "Eliminado", JOptionPane.INFORMATION_MESSAGE);
                this.listar();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Se ha cancelado la eliminacion", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        double suma2 = 0;
        this.limpiarTabla();
        fecha fecha = new fecha();
        if (txtBuscar.getText().length() == 0) {
            this.listar();
        } else {
            if (fecha.esFecha(txtBuscar.getText())) {
                List<Egreso> listaEgreso = conEgr.selectFecha(txtBuscar.getText());
                DefaultTableModel modelo = (DefaultTableModel) tblListar.getModel();
                for (int i = 0; i < listaEgreso.size(); i++) {
                    Egreso getE = (Egreso) listaEgreso.get(i);
                    modelo.addRow(new Object[]{getE.getDetalle(), getE.getMonto(), getE.getFecha(), conCat.selectCateNom(getE.getCategoria())});

                    suma2 += getE.getMonto();
                }

                lblTotal.setText("Total de Egresos del " + txtBuscar.getText());
                txtTotal.setText("" + suma2);
            } else {
                List<Egreso> listaEgreso = conEgr.selectCategoria(conCat.selectId(txtBuscar.getText()));
                DefaultTableModel modelo = (DefaultTableModel) tblListar.getModel();
                for (int i = 0; i < listaEgreso.size(); i++) {
                    Egreso getE = (Egreso) listaEgreso.get(i);
                    modelo.addRow(new Object[]{getE.getDetalle(), getE.getMonto(), getE.getFecha(), conCat.selectCateNom(getE.getCategoria())});
                    suma2 += getE.getMonto();
                }
                lblTotal.setText("Total de Egresos de la categoria " + txtBuscar.getText());
                txtTotal.setText("" + suma2);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public boolean validarMonto(String monto) {
        try {
            double d = Double.parseDouble(monto);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    public void llenarConboCate() {
        List<Categoria> lista = conCat.select();
        cmbCategoria.removeAllItems();
        cmbCategoria.addItem("Seleccionar");
        for (int i = 0; i < lista.size(); i++) {
            cmbCategoria.addItem(lista.get(i).getNombre());
        }
    }

    public void lirmpiarCampos() {
        txtDetalle.setText("");
        txtMonto.setText("");
        datFecha.setDate(null);
        cmbCategoria.setSelectedIndex(0);
        chkNuevo.setSelected(false);
        btnCancelar.setEnabled(false);
        btnGuardar.setEnabled(false);
    }

    private void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tblListar.getModel();
        for (int i = 0; i < tblListar.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

    public void listar() {
        this.limpiarTabla();
        double suma1 = 0;
        List<Egreso> listE = conEgr.select();
        DefaultTableModel modelo = (DefaultTableModel) tblListar.getModel();
        for (int i = 0; i < listE.size(); i++) {
            Egreso getE = (Egreso) listE.get(i);
            modelo.addRow(new Object[]{getE.getDetalle(), getE.getMonto(), getE.getFecha(), conCat.selectCateNom(getE.getCategoria())});
            suma1 += getE.getMonto();
        }
        lblTotal.setText("Total de Ingresos");
        txtTotal.setText("" + suma1);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox chkNuevo;
    private javax.swing.JComboBox<String> cmbCategoria;
    private com.toedter.calendar.JDateChooser datFecha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblDetalle;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlListar;
    private javax.swing.JPanel pnlRegistrar;
    private javax.swing.JTable tblListar;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDetalle;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
